package com.algaworks.sistemausuarios;

import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;

import com.algaworks.sistemausuarios.dto.UsuarioDTO;
import com.algaworks.sistemausuarios.model.Dominio;
import com.algaworks.sistemausuarios.model.Usuario;

import java.util.List;

import javax.persistence.EntityManager;

public class ConsultasComJPQL {

	public static void main(String[] args) {
		
		EntityManagerFactory entityManagerFactory = 
					Persistence.createEntityManagerFactory("Clientes-PU");
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		
		//primeirasConsultas(entityManager);
		escolhendoORetorno(entityManager);
		
		entityManager.close();  	
		entityManagerFactory.close();
		System.exit(0);
	}
	
	public static void escolhendoORetorno(EntityManager entityManager) {
		/*
		System.out.println("escolhendoORetorno nome dominio \n----------------------------");
		CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();
		
		CriteriaQuery<Dominio> criteriaQuery = criteriaBuilder.createQuery(Dominio.class);
		
		Root<Usuario> root = criteriaQuery.from(Usuario.class);
		
		//root pedido retorno do dominio
		criteriaQuery.select(root.get("dominio"));
		
		TypedQuery<Dominio> typedQuery = entityManager.createQuery(criteriaQuery);
		List<Dominio> lista = typedQuery.getResultList();
		lista.forEach(d -> System.out.println(d.getId() + " => " + d.getNome()));
		
		*/
		
		System.out.println("Retorando string \n----------------------------");
		CriteriaBuilder criteriaBuilders = entityManager.getCriteriaBuilder();
		
		CriteriaQuery<String> criteriaQuers = criteriaBuilders.createQuery(String.class);
		
		Root<Usuario> roots = criteriaQuers.from(Usuario.class);
		
		//root pedido retorno do dominio
		criteriaQuers.select(roots.get("nome"));
		
		TypedQuery<String> typedQuerys = entityManager.createQuery(criteriaQuers);
		List<String> listas = typedQuerys.getResultList();
		listas.forEach(nome -> System.out.println(nome);
	}
	public static void primeirasConsultas(EntityManager entityManager) {
		
		System.out.println("primeirasConsultas \n----------------------------");
		CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();
		CriteriaQuery<Usuario> criteriaQuery = criteriaBuilder.createQuery(Usuario.class);
		Root<Usuario> root = criteriaQuery.from(Usuario.class);
		
		criteriaQuery.select(root);
		TypedQuery<Usuario> typedQuery = entityManager.createQuery(criteriaQuery);
		List<Usuario> lista = typedQuery.getResultList();
		lista.forEach(u -> System.out.println(u.getId() + " => " + u.getNome()));
	}
}
